//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TalentoTECDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TalentoTECEntities : DbContext
    {
        public TalentoTECEntities()
            : base("name=TalentoTECEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrador> Administradors { get; set; }
        public virtual DbSet<Aplicante> Aplicantes { get; set; }
        public virtual DbSet<CarrerasProfesionale> CarrerasProfesionales { get; set; }
        public virtual DbSet<CoordinadoresEscuela> CoordinadoresEscuelas { get; set; }
        public virtual DbSet<Empresa> Empresas { get; set; }
        public virtual DbSet<GradoEstudioFormal> GradoEstudioFormals { get; set; }
        public virtual DbSet<Idioma> Idiomas { get; set; }
        public virtual DbSet<Nacionalidade> Nacionalidades { get; set; }
        public virtual DbSet<NivelDominioIdioma> NivelDominioIdiomas { get; set; }
        public virtual DbSet<OfertasLaborale> OfertasLaborales { get; set; }
        public virtual DbSet<Pais> Paises { get; set; }
        public virtual DbSet<SectoresProductivo> SectoresProductivos { get; set; }
        public virtual DbSet<TipoAplicante> TipoAplicantes { get; set; }
        public virtual DbSet<TipoIdentificacion> TipoIdentificacions { get; set; }
        public virtual DbSet<TipoMoneda> TipoMonedas { get; set; }
        public virtual DbSet<TipoOferta> TipoOfertas { get; set; }
        public virtual DbSet<AplicanteXOferta> AplicanteXOfertas { get; set; }
        public virtual DbSet<CapacitacionesXAplicante> CapacitacionesXAplicantes { get; set; }
        public virtual DbSet<CuentasUsuario> CuentasUsuarios { get; set; }
        public virtual DbSet<EducacionFormalXAplicante> EducacionFormalXAplicantes { get; set; }
        public virtual DbSet<ExperienciaLaboralXAplicante> ExperienciaLaboralXAplicantes { get; set; }
        public virtual DbSet<IdiomaXAplicante> IdiomaXAplicantes { get; set; }
        public virtual DbSet<ReferenciasXAplicante> ReferenciasXAplicantes { get; set; }
    
        public virtual ObjectResult<Nullable<int>> ActualizarEmpresa(Nullable<int> iDEmpresa, string nombreEmpresa, string cedulaJuridica, string direccion, string provincia, string nombrePais, string telefonoEmpresa, string emailEmpresa, string uRL_Empresa, string nombreContactoEmpresa, string emailContacto, string puestoContacto, string telefonoContacto, string descripcionActividades, string nombreUsuario, string passwordUsuario, string nombreSectores)
        {
            var iDEmpresaParameter = iDEmpresa.HasValue ?
                new ObjectParameter("IDEmpresa", iDEmpresa) :
                new ObjectParameter("IDEmpresa", typeof(int));
    
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("nombreEmpresa", nombreEmpresa) :
                new ObjectParameter("nombreEmpresa", typeof(string));
    
            var cedulaJuridicaParameter = cedulaJuridica != null ?
                new ObjectParameter("cedulaJuridica", cedulaJuridica) :
                new ObjectParameter("cedulaJuridica", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("provincia", provincia) :
                new ObjectParameter("provincia", typeof(string));
    
            var nombrePaisParameter = nombrePais != null ?
                new ObjectParameter("nombrePais", nombrePais) :
                new ObjectParameter("nombrePais", typeof(string));
    
            var telefonoEmpresaParameter = telefonoEmpresa != null ?
                new ObjectParameter("telefonoEmpresa", telefonoEmpresa) :
                new ObjectParameter("telefonoEmpresa", typeof(string));
    
            var emailEmpresaParameter = emailEmpresa != null ?
                new ObjectParameter("emailEmpresa", emailEmpresa) :
                new ObjectParameter("emailEmpresa", typeof(string));
    
            var uRL_EmpresaParameter = uRL_Empresa != null ?
                new ObjectParameter("URL_Empresa", uRL_Empresa) :
                new ObjectParameter("URL_Empresa", typeof(string));
    
            var nombreContactoEmpresaParameter = nombreContactoEmpresa != null ?
                new ObjectParameter("nombreContactoEmpresa", nombreContactoEmpresa) :
                new ObjectParameter("nombreContactoEmpresa", typeof(string));
    
            var emailContactoParameter = emailContacto != null ?
                new ObjectParameter("emailContacto", emailContacto) :
                new ObjectParameter("emailContacto", typeof(string));
    
            var puestoContactoParameter = puestoContacto != null ?
                new ObjectParameter("puestoContacto", puestoContacto) :
                new ObjectParameter("puestoContacto", typeof(string));
    
            var telefonoContactoParameter = telefonoContacto != null ?
                new ObjectParameter("telefonoContacto", telefonoContacto) :
                new ObjectParameter("telefonoContacto", typeof(string));
    
            var descripcionActividadesParameter = descripcionActividades != null ?
                new ObjectParameter("descripcionActividades", descripcionActividades) :
                new ObjectParameter("descripcionActividades", typeof(string));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var passwordUsuarioParameter = passwordUsuario != null ?
                new ObjectParameter("passwordUsuario", passwordUsuario) :
                new ObjectParameter("passwordUsuario", typeof(string));
    
            var nombreSectoresParameter = nombreSectores != null ?
                new ObjectParameter("nombreSectores", nombreSectores) :
                new ObjectParameter("nombreSectores", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ActualizarEmpresa", iDEmpresaParameter, nombreEmpresaParameter, cedulaJuridicaParameter, direccionParameter, provinciaParameter, nombrePaisParameter, telefonoEmpresaParameter, emailEmpresaParameter, uRL_EmpresaParameter, nombreContactoEmpresaParameter, emailContactoParameter, puestoContactoParameter, telefonoContactoParameter, descripcionActividadesParameter, nombreUsuarioParameter, passwordUsuarioParameter, nombreSectoresParameter);
        }
    
        public virtual int CambiarEstadoEmpresa(Nullable<int> iDEmpresa, string nuevoEstado)
        {
            var iDEmpresaParameter = iDEmpresa.HasValue ?
                new ObjectParameter("IDEmpresa", iDEmpresa) :
                new ObjectParameter("IDEmpresa", typeof(int));
    
            var nuevoEstadoParameter = nuevoEstado != null ?
                new ObjectParameter("NuevoEstado", nuevoEstado) :
                new ObjectParameter("NuevoEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoEmpresa", iDEmpresaParameter, nuevoEstadoParameter);
        }
    
        public virtual int CambiarEstadoOferta(Nullable<int> iDOferta, string nuevoEstado)
        {
            var iDOfertaParameter = iDOferta.HasValue ?
                new ObjectParameter("IDOferta", iDOferta) :
                new ObjectParameter("IDOferta", typeof(int));
    
            var nuevoEstadoParameter = nuevoEstado != null ?
                new ObjectParameter("NuevoEstado", nuevoEstado) :
                new ObjectParameter("NuevoEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoOferta", iDOfertaParameter, nuevoEstadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insertar_Empresa(string nombreEmpresa, string cedulaJuridica, string direccion, string provincia, string nombrePais, string telefonoEmpresa, string emailEmpresa, string uRL_Empresa, string nombreContactoEmpresa, string emailContacto, string puestoContacto, string telefonoContacto, string descripcionActividades, string nombreUsuario, string passwordUsuario, string nombreSectores)
        {
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("nombreEmpresa", nombreEmpresa) :
                new ObjectParameter("nombreEmpresa", typeof(string));
    
            var cedulaJuridicaParameter = cedulaJuridica != null ?
                new ObjectParameter("cedulaJuridica", cedulaJuridica) :
                new ObjectParameter("cedulaJuridica", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("provincia", provincia) :
                new ObjectParameter("provincia", typeof(string));
    
            var nombrePaisParameter = nombrePais != null ?
                new ObjectParameter("nombrePais", nombrePais) :
                new ObjectParameter("nombrePais", typeof(string));
    
            var telefonoEmpresaParameter = telefonoEmpresa != null ?
                new ObjectParameter("telefonoEmpresa", telefonoEmpresa) :
                new ObjectParameter("telefonoEmpresa", typeof(string));
    
            var emailEmpresaParameter = emailEmpresa != null ?
                new ObjectParameter("emailEmpresa", emailEmpresa) :
                new ObjectParameter("emailEmpresa", typeof(string));
    
            var uRL_EmpresaParameter = uRL_Empresa != null ?
                new ObjectParameter("URL_Empresa", uRL_Empresa) :
                new ObjectParameter("URL_Empresa", typeof(string));
    
            var nombreContactoEmpresaParameter = nombreContactoEmpresa != null ?
                new ObjectParameter("nombreContactoEmpresa", nombreContactoEmpresa) :
                new ObjectParameter("nombreContactoEmpresa", typeof(string));
    
            var emailContactoParameter = emailContacto != null ?
                new ObjectParameter("emailContacto", emailContacto) :
                new ObjectParameter("emailContacto", typeof(string));
    
            var puestoContactoParameter = puestoContacto != null ?
                new ObjectParameter("puestoContacto", puestoContacto) :
                new ObjectParameter("puestoContacto", typeof(string));
    
            var telefonoContactoParameter = telefonoContacto != null ?
                new ObjectParameter("telefonoContacto", telefonoContacto) :
                new ObjectParameter("telefonoContacto", typeof(string));
    
            var descripcionActividadesParameter = descripcionActividades != null ?
                new ObjectParameter("descripcionActividades", descripcionActividades) :
                new ObjectParameter("descripcionActividades", typeof(string));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var passwordUsuarioParameter = passwordUsuario != null ?
                new ObjectParameter("passwordUsuario", passwordUsuario) :
                new ObjectParameter("passwordUsuario", typeof(string));
    
            var nombreSectoresParameter = nombreSectores != null ?
                new ObjectParameter("nombreSectores", nombreSectores) :
                new ObjectParameter("nombreSectores", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insertar_Empresa", nombreEmpresaParameter, cedulaJuridicaParameter, direccionParameter, provinciaParameter, nombrePaisParameter, telefonoEmpresaParameter, emailEmpresaParameter, uRL_EmpresaParameter, nombreContactoEmpresaParameter, emailContactoParameter, puestoContactoParameter, telefonoContactoParameter, descripcionActividadesParameter, nombreUsuarioParameter, passwordUsuarioParameter, nombreSectoresParameter);
        }
    
        public virtual ObjectResult<Insertar_OfertasLaborales_Result> Insertar_OfertasLaborales(Nullable<int> iDEmpresa, string nombrePuesto, string descripcionPuesto, string requisitosPuesto, Nullable<int> montoSalario, string nombreTipoMoneda, Nullable<System.DateTime> fechaInicioOferta, Nullable<System.DateTime> fechaFinalOferta, string nombreTipoOferta, string nombreContacto, string emailContacto, string telefonoContacto, string estadoOferta, string estadoConfidencialidad, Nullable<int> cantidadPlazas, string carrerasProfesionales)
        {
            var iDEmpresaParameter = iDEmpresa.HasValue ?
                new ObjectParameter("IDEmpresa", iDEmpresa) :
                new ObjectParameter("IDEmpresa", typeof(int));
    
            var nombrePuestoParameter = nombrePuesto != null ?
                new ObjectParameter("nombrePuesto", nombrePuesto) :
                new ObjectParameter("nombrePuesto", typeof(string));
    
            var descripcionPuestoParameter = descripcionPuesto != null ?
                new ObjectParameter("descripcionPuesto", descripcionPuesto) :
                new ObjectParameter("descripcionPuesto", typeof(string));
    
            var requisitosPuestoParameter = requisitosPuesto != null ?
                new ObjectParameter("RequisitosPuesto", requisitosPuesto) :
                new ObjectParameter("RequisitosPuesto", typeof(string));
    
            var montoSalarioParameter = montoSalario.HasValue ?
                new ObjectParameter("montoSalario", montoSalario) :
                new ObjectParameter("montoSalario", typeof(int));
    
            var nombreTipoMonedaParameter = nombreTipoMoneda != null ?
                new ObjectParameter("nombreTipoMoneda", nombreTipoMoneda) :
                new ObjectParameter("nombreTipoMoneda", typeof(string));
    
            var fechaInicioOfertaParameter = fechaInicioOferta.HasValue ?
                new ObjectParameter("fechaInicioOferta", fechaInicioOferta) :
                new ObjectParameter("fechaInicioOferta", typeof(System.DateTime));
    
            var fechaFinalOfertaParameter = fechaFinalOferta.HasValue ?
                new ObjectParameter("fechaFinalOferta", fechaFinalOferta) :
                new ObjectParameter("fechaFinalOferta", typeof(System.DateTime));
    
            var nombreTipoOfertaParameter = nombreTipoOferta != null ?
                new ObjectParameter("nombreTipoOferta", nombreTipoOferta) :
                new ObjectParameter("nombreTipoOferta", typeof(string));
    
            var nombreContactoParameter = nombreContacto != null ?
                new ObjectParameter("nombreContacto", nombreContacto) :
                new ObjectParameter("nombreContacto", typeof(string));
    
            var emailContactoParameter = emailContacto != null ?
                new ObjectParameter("emailContacto", emailContacto) :
                new ObjectParameter("emailContacto", typeof(string));
    
            var telefonoContactoParameter = telefonoContacto != null ?
                new ObjectParameter("telefonoContacto", telefonoContacto) :
                new ObjectParameter("telefonoContacto", typeof(string));
    
            var estadoOfertaParameter = estadoOferta != null ?
                new ObjectParameter("estadoOferta", estadoOferta) :
                new ObjectParameter("estadoOferta", typeof(string));
    
            var estadoConfidencialidadParameter = estadoConfidencialidad != null ?
                new ObjectParameter("estadoConfidencialidad", estadoConfidencialidad) :
                new ObjectParameter("estadoConfidencialidad", typeof(string));
    
            var cantidadPlazasParameter = cantidadPlazas.HasValue ?
                new ObjectParameter("cantidadPlazas", cantidadPlazas) :
                new ObjectParameter("cantidadPlazas", typeof(int));
    
            var carrerasProfesionalesParameter = carrerasProfesionales != null ?
                new ObjectParameter("carrerasProfesionales", carrerasProfesionales) :
                new ObjectParameter("carrerasProfesionales", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Insertar_OfertasLaborales_Result>("Insertar_OfertasLaborales", iDEmpresaParameter, nombrePuestoParameter, descripcionPuestoParameter, requisitosPuestoParameter, montoSalarioParameter, nombreTipoMonedaParameter, fechaInicioOfertaParameter, fechaFinalOfertaParameter, nombreTipoOfertaParameter, nombreContactoParameter, emailContactoParameter, telefonoContactoParameter, estadoOfertaParameter, estadoConfidencialidadParameter, cantidadPlazasParameter, carrerasProfesionalesParameter);
        }
    
        public virtual ObjectResult<ObtenerDatosEmpresa_Result> ObtenerDatosEmpresa(Nullable<int> iDEmpresa)
        {
            var iDEmpresaParameter = iDEmpresa.HasValue ?
                new ObjectParameter("IDEmpresa", iDEmpresa) :
                new ObjectParameter("IDEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerDatosEmpresa_Result>("ObtenerDatosEmpresa", iDEmpresaParameter);
        }
    
        public virtual ObjectResult<ObtenerDatosOfertas_Result> ObtenerDatosOfertas(Nullable<int> iDOferta)
        {
            var iDOfertaParameter = iDOferta.HasValue ?
                new ObjectParameter("IDOferta", iDOferta) :
                new ObjectParameter("IDOferta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerDatosOfertas_Result>("ObtenerDatosOfertas", iDOfertaParameter);
        }
    
        public virtual ObjectResult<ObtenerEmpresasXEstado_Result> ObtenerEmpresasXEstado(string nombreEstado)
        {
            var nombreEstadoParameter = nombreEstado != null ?
                new ObjectParameter("nombreEstado", nombreEstado) :
                new ObjectParameter("nombreEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerEmpresasXEstado_Result>("ObtenerEmpresasXEstado", nombreEstadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerIDCarreraProfesional(string nombreCarrera, string nombreEspecialidad)
        {
            var nombreCarreraParameter = nombreCarrera != null ?
                new ObjectParameter("nombreCarrera", nombreCarrera) :
                new ObjectParameter("nombreCarrera", typeof(string));
    
            var nombreEspecialidadParameter = nombreEspecialidad != null ?
                new ObjectParameter("nombreEspecialidad", nombreEspecialidad) :
                new ObjectParameter("nombreEspecialidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerIDCarreraProfesional", nombreCarreraParameter, nombreEspecialidadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerIDPais(string nombrePais)
        {
            var nombrePaisParameter = nombrePais != null ?
                new ObjectParameter("nombrePais", nombrePais) :
                new ObjectParameter("nombrePais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerIDPais", nombrePaisParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerIDSectorProductivo(string nombreSectorProductivo)
        {
            var nombreSectorProductivoParameter = nombreSectorProductivo != null ?
                new ObjectParameter("nombreSectorProductivo", nombreSectorProductivo) :
                new ObjectParameter("nombreSectorProductivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerIDSectorProductivo", nombreSectorProductivoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerIDTipoMoneda(string nombreMoneda)
        {
            var nombreMonedaParameter = nombreMoneda != null ?
                new ObjectParameter("nombreMoneda", nombreMoneda) :
                new ObjectParameter("nombreMoneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerIDTipoMoneda", nombreMonedaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerIDTipoOferta(string nombreOferta)
        {
            var nombreOfertaParameter = nombreOferta != null ?
                new ObjectParameter("nombreOferta", nombreOferta) :
                new ObjectParameter("nombreOferta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerIDTipoOferta", nombreOfertaParameter);
        }
    
        public virtual ObjectResult<string> ObtenerListaCarreras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerListaCarreras");
        }
    
        public virtual ObjectResult<ObtenerListaCoordinadoresXEscuela_Result> ObtenerListaCoordinadoresXEscuela(string nombreEscuela)
        {
            var nombreEscuelaParameter = nombreEscuela != null ?
                new ObjectParameter("nombreEscuela", nombreEscuela) :
                new ObjectParameter("nombreEscuela", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerListaCoordinadoresXEscuela_Result>("ObtenerListaCoordinadoresXEscuela", nombreEscuelaParameter);
        }
    
        public virtual ObjectResult<string> ObtenerListaEscuelas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerListaEscuelas");
        }
    
        public virtual ObjectResult<string> ObtenerListaEspecialidades(string nombreCarrera)
        {
            var nombreCarreraParameter = nombreCarrera != null ?
                new ObjectParameter("nombreCarrera", nombreCarrera) :
                new ObjectParameter("nombreCarrera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerListaEspecialidades", nombreCarreraParameter);
        }
    
        public virtual ObjectResult<string> ObtenerListaSectoresProductivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerListaSectoresProductivos");
        }
    
        public virtual ObjectResult<ObtenerNombreUsuario_Result> ObtenerNombreUsuario(Nullable<int> iD_Usuario, string tipoCuenta)
        {
            var iD_UsuarioParameter = iD_Usuario.HasValue ?
                new ObjectParameter("ID_Usuario", iD_Usuario) :
                new ObjectParameter("ID_Usuario", typeof(int));
    
            var tipoCuentaParameter = tipoCuenta != null ?
                new ObjectParameter("TipoCuenta", tipoCuenta) :
                new ObjectParameter("TipoCuenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerNombreUsuario_Result>("ObtenerNombreUsuario", iD_UsuarioParameter, tipoCuentaParameter);
        }
    
        public virtual ObjectResult<ObtenerOfertasXEmpresa_Result> ObtenerOfertasXEmpresa(Nullable<int> iD_Empresa)
        {
            var iD_EmpresaParameter = iD_Empresa.HasValue ?
                new ObjectParameter("ID_Empresa", iD_Empresa) :
                new ObjectParameter("ID_Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerOfertasXEmpresa_Result>("ObtenerOfertasXEmpresa", iD_EmpresaParameter);
        }
    
        public virtual ObjectResult<Verificacion_Login_Result> Verificacion_Login(string nombre_Usuario, string password_Usuario)
        {
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            var password_UsuarioParameter = password_Usuario != null ?
                new ObjectParameter("Password_Usuario", password_Usuario) :
                new ObjectParameter("Password_Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Verificacion_Login_Result>("Verificacion_Login", nombre_UsuarioParameter, password_UsuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VerificarLoginAdministrador(string nombre_Usuario, string password_Usuario)
        {
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            var password_UsuarioParameter = password_Usuario != null ?
                new ObjectParameter("Password_Usuario", password_Usuario) :
                new ObjectParameter("Password_Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VerificarLoginAdministrador", nombre_UsuarioParameter, password_UsuarioParameter);
        }
    }
}
